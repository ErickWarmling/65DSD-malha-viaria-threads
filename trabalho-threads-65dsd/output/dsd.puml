' Generated by UML Generator
' Encoded: hLXHRzis47xFhn2m5wUnWwHTkyreWwgEswcmazHMZAr54T0Iun2bI9UKiYnT-zjt92MHb6bdnVeIHyVZyNZtyRiZNyeIYR8gw9xyHDWQ2LH46KLIncKfoB8gSP9nDYVtE3hQko4vZZ8YCehtzhHMb98r7s5QKHHzsOkYWozWhoJPrsWHlq_EXn5XPVG2fhf3utawYq_Zgr4oZHkDuw36QJ8R9schz3Yez2fE_cXNUX9K6S_VNOvdfwsXdpsjqUpoVJmTdwNddajFjobrl7gsJSzpx9TjMbtVVjtbMtVjttOgTqqV7psm9T_bu-ETEziq_tZlQuEBEIa04paN8yvAmId5GWDaq9fBpjBnR15Fpg_Yz3AU9E_ZKTmk_VJ8qqrXrJXD5l7yAZcRZsUEvXDFSH7F4cNdQZ6Ud8-Iq_XqF8noNYqfLZ0yzBK9W_zOXeSXTvLcWUWD6aPJzQE-ruWmJAT6Uc4_r5Y6XE1o64s8B9-FrCU94Wl4SbuCevd-LPBF5M8boL6Ef-YE54ZlnDz5wpn4UZwsGT5HWGyiRX7b2PDOP8Yt1Yg9n1mNw9eB42uvfnWnCmKq2JZWIGNFKLTMyXBHaI0G2zdQrSBNX25Axhs1YfQm0Ui7vMobv0Fr9n3Jthw7g1Kkape5lVrjIJWWZ6H4BorwRaBwaKc7bub-zBdCHtKgmCj-50vNFme62xouvIHNougAzUpd09MLyM51fFaFJBaA9MP0fNeH8hG7MqVFq1WsY7BKm-Pt61aEtVToaI6QWL0iCEMP1amCGoM7x2ZJTGueAO2spPQT77c-hoeaSYJ646W130-hkiuTADeNJNZS0Q3-ah0gF8YDDM7IrXaKMEBI5K2kZOznIMwDUsO3QYHrK1SOwMoh7YKoQM3Tym878pC3RLVUKjFuBgEGV3xbZ40m3Ir1X3_18SKw8QoSm6S3v8FE10DYaz0u_rmHo6Z70KgM62BJsVyPBmpEeRB2ETbmg46ZyKYss5JozGqNUCEZPiOFT4aVbskKuIXfzrq1zhLJttOjyMrpYMyxTgtHqAa92c-A09BSxHpSEZ2zEB-QZTFPdtwb87bx7jPS4dtApP4AqVXjUw0UfivD_WxHfY72YysbTReC6zIE9ORE6gL-v7DQnxTjF1LWg8BVOh79ELCble0JVY6uAZUzjVbrE2SmOSIB6UOYnqoVxErp13Qq2BE88POSIo0D7j1j2Atsn8mhZssy-1BWTxxEE9RMudvJLRMQBgieXoXo1iIdPNEy03U0K2de8L-z7r72Rb0TpepJYfaFnxFhcc4sYDjmO-VKr7dsF6y9Bibz1hFixN7NfLGWiWSuG5HENpsmMz21j9lGUOCct8uf9uRcU7ME1kxGnh1pnbsTckn2AWRJ9dbRGjkFMf_WNytkUj0KvVqwDDrGJPGnNsIcTMe2c7Oa9IxQh3c4r-H3PwaEXbuKI4R9aWAjzEL6PvddMDVaBctgUb2ZWl5RFdAYwu12eisQt-NZRGr7WAGVwas878dgtXPoh_OrlOLEZVHo8nlSUnFcYFntzP8R8WzHkgOmWzS2mTYzUx8T-nR2zhlkXEJcKPVAlO1Smr0lsSjG0TPvB23KjxnnRByv3dW5_BHBqH81t72XvRc6uotgE9hmo6ulinF-NMAOwcXOllZmySD75_Co1FgEi74dm8Pgs7hf3RQvIGLQGWXuUWECdSjdJtEPTwxi1RJHFIHMiedBXu_DfbipJglTgTrfF8tFVeURvtXoER5NTh-0ZyvdLszc-bO6cuJcwqN4y5_c_zxZewD-rFpP3nLkKsRZict0pPMZwHEQzg5LW2hYDH85b-eulxwOjvY6eMj4fUsjd1rwrutzUeLhigh0Xb5pKF6Jker0weerPu2XtceOlH7Gjv5CUkMIvT2ptZU0V4YhnfcZ1a3JCjj0F5pUe2HZq15W0ygGP-okdlXtTqvxuPbY04E694JDFGJjk2k4fd_QnhXNXpl4OFfGKCFsJNgzYs6A2WGdrVO8wYHOD6EAwaQghezBcfAoee28jnEqnBGMlhEtGIkNQ-RAvsl2cBdmmunayxxepGoD-nRgzm4xAokMZGpmiUIl-DrpSy9EwYbDZUtCSiIXYSkIcI10YD--gifI5pC3OoT2-dOmW6kqHQTtFRIWzgGkSNhwva8UllTz5vae7rihJTtuZXUNzfbWwmFEcj5vjOQZf3gPjnU8jS2OWv-LxA0brKsB9mgW9rFscuJEzPUoNAzNEw2OnoweCzN2nQOAvFMbt4zXSxXWGtfTC9P2CooyzDe4-5U8__S24i3A0-t8m7cXiJxze7UOGSbNAue33n23NGyG1jIY02B2sSt6auTj-CSBJaiV-IspcT3t7Do6dZKV3GP1-6tJDVZTDkfYFAJ3GSUqiw7HmyEJflFeFdCS7lvpqctcDruUGahcegvygorRWN6plgSyQZrp11rRfd5mR1a1jmAtmR1Bk59dZpw1MFLDkHlMpT5G-bv23QuA-Yy
' URL: http://www.plantuml.com/plantuml/uml/hLXHRzis47xFhn2m5wUnWwHTkyreWwgEswcmazHMZAr54T0Iun2bI9UKiYnT-zjt92MHb6bdnVeIHyVZyNZtyRiZNyeIYR8gw9xyHDWQ2LH46KLIncKfoB8gSP9nDYVtE3hQko4vZZ8YCehtzhHMb98r7s5QKHHzsOkYWozWhoJPrsWHlq_EXn5XPVG2fhf3utawYq_Zgr4oZHkDuw36QJ8R9schz3Yez2fE_cXNUX9K6S_VNOvdfwsXdpsjqUpoVJmTdwNddajFjobrl7gsJSzpx9TjMbtVVjtbMtVjttOgTqqV7psm9T_bu-ETEziq_tZlQuEBEIa04paN8yvAmId5GWDaq9fBpjBnR15Fpg_Yz3AU9E_ZKTmk_VJ8qqrXrJXD5l7yAZcRZsUEvXDFSH7F4cNdQZ6Ud8-Iq_XqF8noNYqfLZ0yzBK9W_zOXeSXTvLcWUWD6aPJzQE-ruWmJAT6Uc4_r5Y6XE1o64s8B9-FrCU94Wl4SbuCevd-LPBF5M8boL6Ef-YE54ZlnDz5wpn4UZwsGT5HWGyiRX7b2PDOP8Yt1Yg9n1mNw9eB42uvfnWnCmKq2JZWIGNFKLTMyXBHaI0G2zdQrSBNX25Axhs1YfQm0Ui7vMobv0Fr9n3Jthw7g1Kkape5lVrjIJWWZ6H4BorwRaBwaKc7bub-zBdCHtKgmCj-50vNFme62xouvIHNougAzUpd09MLyM51fFaFJBaA9MP0fNeH8hG7MqVFq1WsY7BKm-Pt61aEtVToaI6QWL0iCEMP1amCGoM7x2ZJTGueAO2spPQT77c-hoeaSYJ646W130-hkiuTADeNJNZS0Q3-ah0gF8YDDM7IrXaKMEBI5K2kZOznIMwDUsO3QYHrK1SOwMoh7YKoQM3Tym878pC3RLVUKjFuBgEGV3xbZ40m3Ir1X3_18SKw8QoSm6S3v8FE10DYaz0u_rmHo6Z70KgM62BJsVyPBmpEeRB2ETbmg46ZyKYss5JozGqNUCEZPiOFT4aVbskKuIXfzrq1zhLJttOjyMrpYMyxTgtHqAa92c-A09BSxHpSEZ2zEB-QZTFPdtwb87bx7jPS4dtApP4AqVXjUw0UfivD_WxHfY72YysbTReC6zIE9ORE6gL-v7DQnxTjF1LWg8BVOh79ELCble0JVY6uAZUzjVbrE2SmOSIB6UOYnqoVxErp13Qq2BE88POSIo0D7j1j2Atsn8mhZssy-1BWTxxEE9RMudvJLRMQBgieXoXo1iIdPNEy03U0K2de8L-z7r72Rb0TpepJYfaFnxFhcc4sYDjmO-VKr7dsF6y9Bibz1hFixN7NfLGWiWSuG5HENpsmMz21j9lGUOCct8uf9uRcU7ME1kxGnh1pnbsTckn2AWRJ9dbRGjkFMf_WNytkUj0KvVqwDDrGJPGnNsIcTMe2c7Oa9IxQh3c4r-H3PwaEXbuKI4R9aWAjzEL6PvddMDVaBctgUb2ZWl5RFdAYwu12eisQt-NZRGr7WAGVwas878dgtXPoh_OrlOLEZVHo8nlSUnFcYFntzP8R8WzHkgOmWzS2mTYzUx8T-nR2zhlkXEJcKPVAlO1Smr0lsSjG0TPvB23KjxnnRByv3dW5_BHBqH81t72XvRc6uotgE9hmo6ulinF-NMAOwcXOllZmySD75_Co1FgEi74dm8Pgs7hf3RQvIGLQGWXuUWECdSjdJtEPTwxi1RJHFIHMiedBXu_DfbipJglTgTrfF8tFVeURvtXoER5NTh-0ZyvdLszc-bO6cuJcwqN4y5_c_zxZewD-rFpP3nLkKsRZict0pPMZwHEQzg5LW2hYDH85b-eulxwOjvY6eMj4fUsjd1rwrutzUeLhigh0Xb5pKF6Jker0weerPu2XtceOlH7Gjv5CUkMIvT2ptZU0V4YhnfcZ1a3JCjj0F5pUe2HZq15W0ygGP-okdlXtTqvxuPbY04E694JDFGJjk2k4fd_QnhXNXpl4OFfGKCFsJNgzYs6A2WGdrVO8wYHOD6EAwaQghezBcfAoee28jnEqnBGMlhEtGIkNQ-RAvsl2cBdmmunayxxepGoD-nRgzm4xAokMZGpmiUIl-DrpSy9EwYbDZUtCSiIXYSkIcI10YD--gifI5pC3OoT2-dOmW6kqHQTtFRIWzgGkSNhwva8UllTz5vae7rihJTtuZXUNzfbWwmFEcj5vjOQZf3gPjnU8jS2OWv-LxA0brKsB9mgW9rFscuJEzPUoNAzNEw2OnoweCzN2nQOAvFMbt4zXSxXWGtfTC9P2CooyzDe4-5U8__S24i3A0-t8m7cXiJxze7UOGSbNAue33n23NGyG1jIY02B2sSt6auTj-CSBJaiV-IspcT3t7Do6dZKV3GP1-6tJDVZTDkfYFAJ3GSUqiw7HmyEJflFeFdCS7lvpqctcDruUGahcegvygorRWN6plgSyQZrp11rRfd5mR1a1jmAtmR1Bk59dZpw1MFLDkHlMpT5G-bv23QuA-Yy
' Generated on: 2025-10-16T16:33:51.369056600

@startuml
skinparam classAttributeIconSize 0
hide circle

class TipoCelula {
  +{static} VAZIO: int = 0
  +{static} ESTRADA_CIMA: int = 1
  +{static} ESTRADA_DIREITA: int = 2
  +{static} ESTRADA_BAIXO: int = 3
  +{static} ESTRADA_ESQUERDA: int = 4
  +{static} CRUZAMENTO_CIMA: int = 5
  +{static} CRUZAMENTO_DIREITA: int = 6
  +{static} CRUZAMENTO_BAIXO: int = 7
  +{static} CRUZAMENTO_ESQUERDA: int = 8
  +{static} CRUZAMENTO_CIMA_DIREITA: int = 9
  +{static} CRUZAMENTO_CIMA_ESQUERDA: int = 10
  +{static} CRUZAMENTO_DIREITA_BAIXO: int = 11
  +{static} CRUZAMENTO_BAIXO_ESQUERDA: int = 12
}

class SimuladorController {
  -{static} INTERVALO_ATUALIZACAO: int = 50
  -{static} TENTATIVAS_INSERCAO: int = 3
  -{static} VARIACAO_VELOCIDADE: double = 0.3
  -{static} instance: SimuladorController
  -malha: Malha
  -painelMalha: PainelMalha
  -carros: List<Carro>
  -random: Random
  -quantidadeMaxima: int
  -{static} VELOCIDADE_BASE: int = 500
  -intervaloInsercao: int
  -usarSemaforo: boolean
  -inserindo: boolean
  -rodando: boolean
  -totalCriados: int
  -totalFinalizados: int
  -ultimaInsercao: long
  --
  -SimuladorController()
  +{static} getInstance(): SimuladorController
  +inicializar(malha: Malha, painel: PainelMalha, qtdCarros: int, intervaloInsercao: int, usarSemaforo: boolean): void
  +run(): void
  -atualizarVisualizacao(): void
  -tentarInserirCarro(): void
  -tentarInserirNaEntrada(entrada: Celula): boolean
  -calcularVelocidadeAleatoria(): int
  -limparCarrosFinalizados(): void
  -aguardarEncerramento(): void
  +pararInsercao(): void
  +continuarInsercao(): void
  +encerrarSimulacao(): void
  +reset(): void
  +getCarrosAtivos(): int
  +getTotalCriados(): int
  +getTotalFinalizados(): int
  +isInserindo(): boolean
  +isRodando(): boolean
}

class ExclusaoMonitor {
  -lock: ReentrantLock
  --
  +ExclusaoMonitor()
  +tentarAdquirir(): boolean
  +liberar(): void
  +getNome(): String
}

class ExclusaoSemaforo {
  -semaforo: Semaphore
  --
  +ExclusaoSemaforo()
  +tentarAdquirir(): boolean
  +liberar(): void
  +getNome(): String
}

interface IExclusaoMutua {
  ~tentarAdquirir(): boolean
  ~liberar(): void
  ~getNome(): String
}

class Carro {
  -{static} contadorId: int = 0
  -{static} TEMPO_RETRY: int = 50
  -id: int
  -posicao: Celula
  -malha: Malha
  -velocidade: int
  -usarSemaforo: boolean
  -random: Random
  -rodando: boolean
  -ultimaPosicao: Celula
  --
  +Carro(posicaoInicial: Celula, malha: Malha, velocidade: int, usarSemaforo: boolean)
  +run(): void
  -mover(): void
  -tentarMoverParaProxima(proxima: Celula): void
  -tentarMoverComReordenacao(proxima: Celula): void
  -realizarMovimento(destino: Celula): void
  -calcularProximaCelula(): Celula
  -obterOpcoesMovimento(): List<Celula>
  -adicionarCelulaSeValida(lista: List<Celula>, linha: int, coluna: int): void
  -finalizarCarro(): void
  +parar(): void
  +getPosicao(): Celula
  +getCarroId(): int
  +getVelocidade(): int
  +isUsandoSemaforo(): boolean
}

class Celula {
  -linha: int
  -coluna: int
  -tipo: int
  -carro: Carro
  -id: int
  -exclusaoSemaforo: IExclusaoMutua
  -exclusaoMonitor: IExclusaoMutua
  --
  +Celula(linha: int, coluna: int, tipo: int, totalColunas: int)
  +getId(): int
  +getLinha(): int
  +getColuna(): int
  +getTipo(): int
  +temCarro(): boolean
  +getCarro(): Carro
  +getIcon(): ImageIcon
  +podeEntrar(): boolean
  +entrarCarro(novoCarro: Carro): void
  +sairCarro(): void
  +tentarAdquirir(usarSemaforo: boolean): boolean
  +liberar(usarSemaforo: boolean): void
  +isCruzamento(): boolean
  +isEntrada(linhas: int, colunas: int): boolean
  +isSaida(linhas: int, colunas: int): boolean
  +toString(): String
}

class Malha {
  -matriz: Celula
  -linhas: int
  -colunas: int
  -entradas: List<Celula>
  -saidas: List<Celula>
  --
  +Malha(caminhoArquivo: String)
  -carregarMalha(caminhoArquivo: String): void
  -identificarEntradasSaidas(): void
  +getCelula(linha: int, coluna: int): Celula
  +getMatriz(): Celula[][]
  +getLinhas(): int
  +getColunas(): int
  +getEntradas(): List<Celula>
  +getSaidas(): List<Celula>
}

class TrabalhoThreads65dsd {
  +{static} main(args: String[]): void
}

class PainelMalha {
  -{static} TAMANHO_CELULA: int = 20
  -{static} COR_GRADE: Color = new Color(200, 200, 200)
  -malha: Malha
  -ultimaAtualizacao: long = 0
  -contadorAtualizacoes: int = 0
  -mostrarFPS: boolean = false
  --
  +PainelMalha(malha: Malha)
  -configurarPainel(): void
  #paintComponent(g: Graphics): void
  -renderizarMalha(g: Graphics): void
  -renderizarCelula(g: Graphics, celula: Celula, linha: int, coluna: int): void
  -desenharGrade(g: Graphics, x: int, y: int): void
  -atualizarMetricasFPS(): void
  +atualizar(): void
  +setMostrarFPS(mostrar: boolean): void
  +getMalha(): Malha
  +{static} getTamanhoCelula(): int
}

class TelaInicial {
  -lblTitulo: JLabel
  -lblQtdCarros: JLabel
  -spnQtdCarros: JSpinner
  -lblIntervaloInsercao: JLabel
  -spnIntervaloInsercao: JSpinner
  -lblMalha: JLabel
  -cmbMalha: JComboBox<String>
  -lblExclusao: JLabel
  -cmbExclusao: JComboBox<String>
  -btnIniciar: JButton
  --
  +TelaInicial()
  -initComponents(): void
  -configurar(): void
  -carregarMalhas(): void
  -iniciarSimulacao(): void
  +{static} main(args: String[]): void
}

class TelaSimulacao {
  -malha: Malha
  -painelMalha: PainelMalha
  -controller: SimuladorController
  -pnlSuperior: JPanel
  -lblStatus: JLabel
  -lblTipo: JLabel
  -lblCarros: JLabel
  -scrollMalha: JScrollPane
  -pnlControles: JPanel
  -btnInsercao: JButton
  -btnEncerrar: JButton
  -atualizadorLabels: Timer
  --
  +TelaSimulacao(malha: Malha, qtdCarros: int, intervaloInsercao: int, usarSemaforo: boolean)
  -initComponents(usarSemaforo: boolean): void
  -inicializarSimulacao(qtdCarros: int, intervaloInsercao: int, usarSemaforo: boolean): void
  -toggleInsercao(): void
  -encerrarSimulacao(): void
  -confirmarFechamento(): void
  -finalizarEVoltar(): void
  -atualizarLabels(): void
}

SimuladorController *-- SimuladorController
SimuladorController *-- Malha
SimuladorController *-- PainelMalha
SimuladorController o-- Carro
SimuladorController ..> Celula
ExclusaoMonitor ..|> IExclusaoMutua
ExclusaoSemaforo ..|> IExclusaoMutua
Carro *-- Celula
Carro *-- Malha
Celula *-- Carro
Celula *-- IExclusaoMutua
Malha *-- Celula
Malha o-- Celula
PainelMalha *-- Malha
PainelMalha ..> Celula
TelaSimulacao *-- Malha
TelaSimulacao *-- PainelMalha
TelaSimulacao *-- SimuladorController